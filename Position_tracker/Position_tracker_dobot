import time
from datetime import datetime
import os

space = "___"
diretorio = "C://Users//Digital Twin//Documents//GitHub//DEMO_DT//Position_tracker//Logs//log"
data_hora_atual = datetime.now()
formato_data_hora = "%Y-%m-%d_%H-%M-%S"
timestamp = data_hora_atual.strftime(formato_data_hora)
diretorio_novo = diretorio + "__" + timestamp + ".txt"

# Defina a duração total em segundos
duracao_total_segundos = 30

# Obtenha o tempo de início
tempo_inicio = time.time()
log = open(diretorio_novo, 'w+')
# Obtenha a pose inicial
pose_info_anterior = dType.GetPose(api)  # Supondo que dType.GetPose(api) é uma função válida

while (time.time() - tempo_inicio) < duracao_total_segundos:
    pose_info_atual = dType.GetPose(api)  # Supondo que dType.GetPose(api) é uma função válida
    # Verifique se houve uma mudança na pose_info
    if pose_info_atual != pose_info_anterior:
        data_hora_atual = datetime.now()
        formato_data_hora = "%H-%M-%S"
        timestamp1 = data_hora_atual.strftime(formato_data_hora)
        string = str(round(pose_info_atual[0], 3)) + space + str(round(pose_info_atual[1], 3)) + space + str(
            round(pose_info_atual[2], 3)) + space + str(round(pose_info_atual[3], 3))
        string_Print = str(timestamp1) + space + string + "\n"
        log.write(string_Print)
        
        # Crie um novo arquivo com o nome baseado na string escrita e na hora de criação
        novo_arquivo = diretorio + space + timestamp1 + space + string.replace(" ", "_") + ".txt"
        with open(novo_arquivo, "w+") as x:
            x.write(string_Print)
            print('posicao escrita')

        # Atualize a pose_info_anterior
        pose_info_anterior = pose_info_atual

    time.sleep(1)

# Feche o arquivo de log
log.close()
